/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/projectController.js":
/*!**********************************!*\
  !*** ./src/projectController.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _projectData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projectData.js */ \"./src/projectData.js\");\n/* harmony import */ var _projectUI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projectUI.js */ \"./src/projectUI.js\");\n\n\n\n\nconst ProjectsController = (function(){\n\n    function showDefaultProject() {\n\n        const myProject = _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.createProject(\"My Project Title\", \"The description of my fascinating project yay\");\n\n        _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.addProject(myProject);\n\n        _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.addTask(\n            myProject.id,\n            \"Test task somewhat long but it's just for a test\",\n            \"Description de la tâche du dessus\",\n            \"Nov 13\"\n        );\n\n        _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.addTask(\n            myProject.id,\n            \"Test task somewhat long but it's just for a test\",\n            \"Description de la tâche du dessus\",\n        );\n\n        _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.addTask(\n            myProject.id,\n            \"Test task somewhat long but it's just for a test\",\n            \"Description de la tâche du dessus\",\n        );\n\n        _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.projects.add(myProject);\n        _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.projects.show(myProject);\n\n    }\n\n    function actualizeEvents() {\n\n        const actualTasks = Array.from(document.querySelectorAll(\".task\"));\n\n        actualTasks.forEach(task => {\n            const childsLength = task.childNodes.length;\n\n            task.childNodes[childsLength - 1].addEventListener(\"click\", tasks.taskClicked);\n            task.addEventListener(\"mouseenter\", tasks.taskHovered);\n            task.addEventListener(\"mouseleave\", tasks.taskUnhovered);\n\n            if (task.firstChild.checked) task.classList.add(\"task-checked\");\n            task.firstChild.addEventListener(\"click\", tasks.checkBoxClicked);\n        });\n    }\n\n    function init() {\n\n        showDefaultProject();\n\n        const projectsLinks = Array.from(document.querySelectorAll(\".app-nav ul a\"));\n        const modal = document.querySelector(\".modal\");\n        const newTaskButton = document.querySelector(\".new-task-button\");\n        const newProjectButton = document.querySelector(\".new-project-button\");\n\n        projectsLinks.forEach(projectLink => {\n            projectLink.addEventListener(\"mouseenter\", projects.projectHovered);\n            projectLink.addEventListener(\"mouseleave\", projects.projectUnhovered);\n            projectLink.addEventListener(\"click\", projects.projectClicked);\n        });\n\n        modal.addEventListener(\"click\", modals.outOfModalClicked);\n        newTaskButton.addEventListener(\"click\", modals.createTaskClicked);\n        newProjectButton.addEventListener(\"click\", modals.createProjectClicked);\n\n        actualizeEvents();\n        \n    }\n\n    const tasks = (function(){\n        \n        function taskClicked(e) {\n\n            const taskId = e.target.parentNode.dataset.id;\n            console.log(taskId);\n            const taskData = _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.getTask(taskId);\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.modal.showDetails(taskData);\n\n            // ProjectsUI.modal.showDetails(taskData);\n        \n        }\n\n        function taskHovered(e) {\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.icons.showDeleteIcon(e.target);\n\n            const deleteIcon = document.querySelector(\".trash-icon\");\n\n            deleteIcon.addEventListener(\"click\", (e) => {\n\n                const taskId = e.target.parentNode.dataset.id;\n\n                deleteTaskClicked(taskId);\n            });\n\n        }\n\n        function taskUnhovered(e) {\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.icons.removeDeleteIcon(e.target);\n        \n        }\n\n        function deleteTaskClicked(id) {\n\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.tasks.deleteTask(id);\n            _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.deleteTask(id);\n\n        }\n\n        function checkBoxClicked(e) {\n\n            const taskId = e.target.parentNode.dataset.id;\n            const taskState = _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.getTask(taskId).completed;\n\n            _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.updateTask(taskId);\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.tasks.updateTask(taskId, taskState);\n        \n        }\n\n        return {\n            taskClicked,\n            taskHovered,\n            taskUnhovered,\n            deleteTaskClicked,\n            checkBoxClicked\n        }\n\n    })();\n\n    const projects = (function() {\n\n        function projectClicked(e) {\n\n            const projectId = e.target.parentNode.getAttribute(\"data-id\");\n\n            // if (projectId === document\n            //     .querySelector(\".active-project\")\n            //     .getAttribute(\"data-id\")) return;\n            \n            console.log(projectId);\n            const projectData = _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.getProject(projectId)\n\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.projects.show(projectData);\n            actualizeEvents();\n            \n        }\n\n        function projectHovered(e) {\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.icons.showDeleteIcon(e.target);\n\n            const deleteIcon = document.querySelector(\".trash-icon\");\n\n            deleteIcon.addEventListener(\"click\", (e) => {\n                e.stopImmediatePropagation();\n                const projects = Array.from(document.querySelectorAll(\".app-nav ul li\"));\n                const actualProject = e.target.parentNode.parentNode;\n                console.log(projects.length);\n\n                if (projects.length == 1) return;\n\n                const projectToShow = projects.find(project => {\n                    return project && project !== actualProject;\n                });\n\n                const projectData = _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.getProject(projectToShow.dataset.id);\n                _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.projects.show(projectData);\n                actualProject.remove();  \n                actualizeEvents();\n            });\n        }\n\n        function projectUnhovered(e) {\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.icons.removeDeleteIcon(e.target);\n        }\n\n        return {\n            projectClicked,\n            projectHovered,\n            projectUnhovered\n        };\n        \n    })();\n\n    const modals = (function() {\n        \n        function createTaskClicked(e) {\n\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.modal.showTaskCreator();\n            document.querySelector(\"button\").addEventListener(\"click\", validatedForm);\n        \n        }\n\n        function createProjectClicked(e) {\n\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.modal.showProjectCreator();\n            document.querySelector(\"button\").addEventListener(\"click\", validatedForm);\n        \n        }\n\n        function outOfModalClicked(e) {\n\n            if (e.target !== e.currentTarget) return;\n\n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.modal.close();\n        \n        }\n\n        function validatedForm(e) {\n\n            if (e.target.parentNode.classList.contains(\"project-modal\")) {\n                const titleInput = document.getElementById(\"title-input\"); \n                const descInput = document.getElementById(\"desc-input\"); \n\n                if (!titleInput.value || !descInput.value) {\n                    _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.modal.showErrorMessage();\n                    return;\n                } else {\n                    const myNewProject = _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.createProject(titleInput.value, descInput.value);\n\n                    _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.addProject(myNewProject);\n                    _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.projects.add(myNewProject);\n\n                    let newProjectUI = document.querySelector(\".app-nav ul\").lastChild;\n                    newProjectUI = newProjectUI.firstChild;\n\n                    newProjectUI.addEventListener(\"mouseenter\", projects.projectHovered);\n                    newProjectUI.addEventListener(\"mouseleave\", projects.projectUnhovered);\n                    newProjectUI.addEventListener(\"click\", projects.projectClicked);\n\n                }\n            } else {\n                const titleInput = document.getElementById(\"title-input\"); \n                const descInput = document.getElementById(\"desc-input\"); \n                const dateInput = document.getElementById(\"date-input\");\n\n                if (!titleInput.value || !descInput.value) {\n                    _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.modal.showErrorMessage();\n                    return;\n                } else {\n                    const projectId = document.querySelector(\"li.active-project\").dataset.id;\n                    \n                    if (!dateInput.value) {\n                        const newTask = _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.addTask(\n                            projectId,\n                            titleInput.value,\n                            descInput.value\n                        );\n\n                        _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.tasks.addTask(\n                            newTask.id,\n                            titleInput.value,\n                            descInput.value\n                        );\n                    } else {\n                        let year, month, day;\n                        let formatedDate;\n\n                        const months = {\n                            \"01\": \"Jan\",\n                            \"02\": \"Feb\",\n                            \"03\": \"Mar\",\n                            \"04\": \"Apr\",\n                            \"05\": \"May\",\n                            \"06\": \"Jun\",\n                            \"07\": \"Jul\",\n                            \"08\": \"Aug\",\n                            \"09\": \"Sep\",\n                            \"10\": \"Oct\",\n                            \"11\": \"Nov\",\n                            \"12\": \"Dec\"\n                        }\n                        \n                        let date = dateInput.value.split(\"-\");\n                        month = date[1];\n                        day = date[2];\n                        formatedDate = `${months[month]} ${day}`;\n                        \n                        const newTask = _projectData_js__WEBPACK_IMPORTED_MODULE_0__.ProjectsData.addTask(\n                            projectId,\n                            titleInput.value,\n                            descInput.value,\n                            formatedDate\n                        );\n\n                        _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.tasks.addTask(\n                            newTask.id,\n                            titleInput.value,\n                            descInput.value,\n                            formatedDate\n                        );\n\n\n                    } \n\n                    const task = document.querySelector(\".project-tasks\").lastChild;\n                    const childsLength = task.childNodes.length;\n\n                    task.childNodes[childsLength - 1].addEventListener(\"click\", tasks.taskClicked);\n                    task.addEventListener(\"mouseenter\", tasks.taskHovered);\n                    task.addEventListener(\"mouseleave\", tasks.taskUnhovered);\n\n                    task.firstChild.addEventListener(\"click\", tasks.checkBoxClicked);\n                } \n            }\n             \n            _projectUI_js__WEBPACK_IMPORTED_MODULE_1__.ProjectsUI.modal.close();\n        }\n\n        return {\n            createTaskClicked,\n            createProjectClicked,\n            outOfModalClicked,\n            validatedForm\n        }\n    })();\n\n    init();\n\n})();\n\n//ProjectsUI.modal.showDetails(\n//    {\n//        title: \"Title\", \n//        desc: `My full and pretty description. We're gonna make it a bit longer\n//        for tests bcs yeah it's important to this if the layering stays right`, \n//        date: \"Nov 13\"\n//    });\n\n\n//# sourceURL=webpack://odin-todo-list/./src/projectController.js?");

/***/ }),

/***/ "./src/projectData.js":
/*!****************************!*\
  !*** ./src/projectData.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProjectsData\": () => (/* binding */ ProjectsData)\n/* harmony export */ });\nconst ProjectsData = (function() {\n\n    // STOCKAGE \n    \n    const projects = [];\n\n    // DATA OBJECTS\n\n    function Project(title, desc) {\n        const tasks = [];\n        const id = _randomId();\n\n        return {\n            id, \n            get title() {\n                return title;\n            },\n            get desc() {\n                return desc;\n            },\n            get tasks() {\n                return tasks;\n            }\n        };\n    }\n\n    function Task(projectId, title, desc, date = null, completed = false) {\n        const id = `${projectId}-${_randomId()}`; \n            \n        return {\n            id, \n            get title() {\n                return title;\n            },\n            get desc() {\n                return desc;\n            },\n            get date() {\n                return date;\n            },\n            get completed() {\n                return completed;\n            },\n            set completed(value) {\n                completed = value;\n            } \n        };\n    }\n\n    // MANIPULATION INTERFACE (CRUD); \n\n    function _randomId() {\n        return Math.floor(Math.random() * 1e+8);\n    }\n\n    function getProject(projectId) {\n        return projects.find(project => project.id == projectId);\n    }\n\n    function getTask(taskId) {\n        const projectId = taskId.split(\"-\")[0];   \n        const taskToGet = projects\n            .find(project => {\n                return projectId == project.id;\n            })\n            .tasks\n            .find(task => task.id == taskId);\n    \n        return taskToGet;\n    }\n\n    function addProject(project) { \n        projects.push(project);\n    }\n\n    function createProject(title, desc) {\n        return Project(title, desc);\n    }\n\n    function addTask(projectId, title, desc, date = null, completed = false) {\n        const projectToUpdate = projects.find(project => project.id == projectId); \n        const newTask = Task(projectId, title, desc, date, completed);\n\n        if (!projectToUpdate) return null;\n        \n        projectToUpdate.tasks.push(newTask);\n        return newTask;\n    }\n\n    function updateTask(taskId) {\n        const projectId = taskId.split(\"-\")[0];   \n        console.log(projectId);\n        const taskToUpdate = projects\n            .find(project => {\n                return projectId == project.id;\n            })\n            .tasks\n            .find(task => task.id == taskId);\n\n        taskToUpdate.completed = !taskToUpdate.completed;\n        \n    }\n\n    function deleteProject(projectId) {\n        projects.splice(projects.findIndex(project => project.id == projectId), 1);\n    }\n\n    function deleteTask(taskId) {\n        console.log(taskId);\n        const projectId = taskId.split(\"-\")[0];   \n        const projectOfTask = projects.find(project => project.id == projectId);\n\n        if (!projectOfTask) {\n            console.log(\"ERROR\");\n            console.log(projectOfTask);\n            return ; \n        }\n\n        projectOfTask\n            .tasks\n            .splice(projectOfTask.tasks.findIndex(task => task.id == taskId), 1);\n    } \n\n    return {\n        projects, // temporary\n\n        addTask,\n        addProject,\n        createProject,\n\n        deleteTask,\n        deleteProject,\n\n        updateTask,\n\n        getTask,\n        getProject,\n\n        get projects() {\n            // Pas très encapsulé mais on verra après si on le retire pas\n            return projects;\n        }\n    };\n\n})();\n\n\n\n\n// Les tests\n\nconst myProject = ProjectsData.createProject(\"My Project Title\", \"The description of my fascinating project yay\");\n\nProjectsData.addProject(myProject);\n\nProjectsData.addTask(\n    myProject.id,\n    \"Test task somewhat long but it's just for a test\",\n    \"Description de la tâche du dessus\",\n    \"Nov 13\"\n);\n\nProjectsData.addTask(\n    myProject.id,\n    \"Test task somewhat long but it's just for a test\",\n    \"Description de la tâche du dessus\",\n);\n\nProjectsData.addTask(\n    myProject.id,\n    \"Test task somewhat long but it's just for a test\",\n    \"Description de la tâche du dessus\",\n);\n\nconsole.log(ProjectsData.projects);\n\n\n//# sourceURL=webpack://odin-todo-list/./src/projectData.js?");

/***/ }),

/***/ "./src/projectUI.js":
/*!**************************!*\
  !*** ./src/projectUI.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProjectsUI\": () => (/* binding */ ProjectsUI)\n/* harmony export */ });\nconst ProjectsUI = (function() {\n\n    const appElements = {\n        nav: document.querySelector(\".app-nav ul\"),\n        mainPage: document.querySelector(\".app-main\"), \n        modal: document.querySelector(\".modal\") \n    }    \n\n    const active = (function() {\n        const projectPage = document.createElement(\"div\");\n        projectPage.classList.add(\"project-page\");\n        projectPage.dataset.id = \"\";\n\n        const projectHeader = document.createElement(\"div\");\n        projectHeader.classList.add(\"project-header\");\n        \n        const projectTitle = document.createElement(\"h2\");\n        projectTitle.classList.add(\"project-title\");\n        projectTitle.textContent = \"\";\n\n        const projectDesc = document.createElement(\"p\");\n        projectDesc.classList.add(\"project-description\");\n        projectDesc.textContent = \"\";\n\n        projectHeader.appendChild(projectTitle);\n        projectHeader.appendChild(projectDesc);\n\n        const projectTasks = document.createElement(\"div\");\n        projectTasks.classList.add(\"project-tasks\");\n\n        projectPage.appendChild(projectHeader);\n        projectPage.appendChild(projectTasks);\n\n        return {\n            page: projectPage, \n            id: projectPage.dataset.id,\n            title: projectTitle,\n            desc: projectDesc,\n            tasks: projectTasks\n        };    \n    })();\n\n    const projects = (function() {\n\n        function add(project) {\n\n            // On crée un li qu'on va append à la liste des projets de l'ui\n            const liElement = document.createElement(\"li\");\n            const aElement = document.createElement(\"a\");\n\n            liElement.dataset.id = project.id;\n            aElement.textContent = project.title;\n            aElement.href = \"#\";\n\n            liElement.appendChild(aElement);\n\n            appElements.nav.appendChild(liElement);\n\n        }\n\n        function show(project) {\n\n            function createTasks(project) {\n                const tasksData = project.tasks;\n\n                for (let task of tasksData) {\n                    tasks.addTask(\n                        task.id,\n                        task.title,\n                        task.desc,\n                        task.date,\n                        task.completed\n                    );\n                }\n            }\n            \n            // On change les données de active et on le réaffiche\n\n            appElements.mainPage.innerHTML = \"\";\n\n            active.id = project.id;\n            active.title.textContent = project.title;\n            active.desc.textContent = project.desc;\n            active.tasks.innerHTML = \"\";\n\n            appElements.mainPage.appendChild(active.page);\n            createTasks(project);\n\n            const activeProject = document.querySelector(\".active-project\");\n\n            if (activeProject) activeProject.classList.remove(\"active-project\");\n\n            document.querySelector(`[data-id=\"${project.id}\"]`).classList.add(\"active-project\");\n            \n        }\n\n        function remove(project) {\n\n            // On enlève l'élément li avec l'id de la liste des projets\n            // (et si la page est affichée, on la remplace par la précédente dans la liste)\n            \n            document.querySelector(`li .app-nav [data-id=${project.id}]`).remove();\n\n        }\n\n        return {\n            add,\n            show,\n            remove\n        };\n\n    })();\n\n    const tasks = (function() {\n        function addTask(id, title, desc, date = null, completed = false) {\n            const task = document.createElement(\"div\");\n            task.classList.add(\"task\");\n            task.setAttribute(\"data-id\", id);\n\n            const taskInput = document.createElement(\"input\");\n            taskInput.setAttribute(\"type\", \"checkbox\");\n\n            if (completed) taskInput.checked = true;\n\n            const taskDate = document.createElement(\"p\");\n            taskDate.classList.add(\"task-date\");\n            taskDate.textContent = date;\n\n            const taskTitle = document.createElement(\"p\");\n            taskTitle.textContent = title;\n\n            task.appendChild(taskInput);\n            if (date) {\n                task.appendChild(taskDate); \n            }\n            task.appendChild(taskTitle);\n\n            active.tasks.appendChild(task);\n        }\n\n        function deleteTask(id) {\n\n            document.querySelector(`[data-id=\"${id}\"]`).remove();\n            \n        }\n\n        function updateTask(id, completed) {\n\n            if (completed) {\n                document.querySelector(`[data-id=\"${id}\"]`).classList.remove(\"task-checked\");\n            } else {\n                document.querySelector(`[data-id=\"${id}\"]`).classList.add(\"task-checked\");\n            }\n\n        }\n\n        return {\n            addTask,\n            deleteTask,\n            updateTask,\n        }\n    })();\n\n    const modal = (function() {\n\n        function showErrorMessage() {\n            if (!document.querySelector(\".modal\")) return;\n            if (document.querySelector(\".error-message\")) return;\n\n            const errorMessage = document.createElement(\"p\");\n            errorMessage.classList.add(\"error-message\");\n            errorMessage.textContent = \"One or both of the text inputs have been left blank!\";\n\n            document.querySelector(\".modal-popup\").appendChild(errorMessage);\n        }\n\n        function showDetails(taskData) {\n            const detailElt = document.createElement(\"div\"); \n            detailElt.classList.add(\"task-details\");\n            detailElt.classList.add(\"modal-popup\");\n\n            const detailTitle = document.createElement(\"h2\");\n            detailTitle.classList.add(\"title\");\n            detailTitle.textContent = taskData.title;\n\n            const descElt = document.createElement(\"div\");\n\n            const descTextElt = document.createElement(\"p\");\n            descTextElt.classList.add(\"description\");\n            descTextElt.textContent = taskData.desc\n            descElt.appendChild(descTextElt);\n\n            detailElt.appendChild(detailTitle);\n            detailElt.appendChild(descElt);\n\n            if (taskData.date) {\n                const dateElt = document.createElement(\"p\");\n                dateElt.classList.add(\"date\");\n                dateElt.classList.add(\"task-date\");\n                dateElt.textContent = taskData.date;\n                descElt.appendChild(dateElt);\n            }\n\n            appElements.modal.innerHTML = \"\";\n            appElements.modal.appendChild(detailElt);\n            appElements.modal.classList.add(\"modal-active\");\n        }\n\n        function showTaskCreator() {\n            const taskCreatorElt = document.createElement(\"div\"); \n            taskCreatorElt.classList.add(\"task-modal\");\n            taskCreatorElt.classList.add(\"modal-popup\");\n\n            const taskCreatorTitle = document.createElement(\"h2\");\n            taskCreatorTitle.classList.add(\"title\");\n            taskCreatorTitle.textContent = \"Create Task\";\n\n            const fieldsContainer = document.createElement(\"div\");\n            \n            const titleFieldContainer = document.createElement(\"div\");\n\n            const titleLabel = document.createElement(\"label\");\n            titleLabel.setAttribute(\"for\", \"title-input\");\n            titleLabel.textContent = \"Title\";\n\n            const titleInput = document.createElement(\"input\");\n            titleInput.setAttribute(\"id\", \"title-input\");\n            titleInput.setAttribute(\"type\", \"text\");\n\n            titleFieldContainer.appendChild(titleLabel);\n            titleFieldContainer.appendChild(titleInput);\n\n            const descFieldContainer = document.createElement(\"div\");\n\n            const descLabel = document.createElement(\"label\");\n            descLabel.setAttribute(\"for\", \"desc-input\");\n            descLabel.textContent = \"Description\";\n\n            const descInput = document.createElement(\"textarea\");\n            descInput.setAttribute(\"id\", \"desc-input\");\n            descInput.setAttribute(\"name\", \"desc-input\");\n            descInput.setAttribute(\"cols\", \"30\");\n            descInput.setAttribute(\"rows\", \"10\");\n            descInput.setAttribute(\"placeholder\", \"Enter your description here...\");\n\n            descFieldContainer.appendChild(descLabel);\n            descFieldContainer.appendChild(descInput);\n\n            const dateFieldContainer = document.createElement(\"div\");\n\n            const dateLabel = document.createElement(\"label\");\n            dateLabel.setAttribute(\"for\", \"date-input\");\n            dateLabel.textContent = \"Date\";\n\n            const dateInput = document.createElement(\"input\");\n            dateInput.setAttribute(\"id\", \"date-input\");\n            dateInput.setAttribute(\"type\", \"date\");\n\n            dateFieldContainer.appendChild(dateLabel);\n            dateFieldContainer.appendChild(dateInput);\n\n            fieldsContainer.appendChild(titleFieldContainer);\n            fieldsContainer.appendChild(descFieldContainer);\n            fieldsContainer.appendChild(dateFieldContainer);\n\n            const confirmButton = document.createElement(\"button\");\n            confirmButton.textContent = \"Confirm\";\n\n            taskCreatorElt.appendChild(taskCreatorTitle);\n            taskCreatorElt.appendChild(fieldsContainer);\n            taskCreatorElt.appendChild(confirmButton);\n\n            appElements.modal.innerHTML = \"\";\n            appElements.modal.appendChild(taskCreatorElt);\n            appElements.modal.classList.add(\"modal-active\");\n        }\n\n        function showProjectCreator() {\n            const projectCreatorElt = document.createElement(\"div\"); \n            projectCreatorElt.classList.add(\"task-details\");\n            projectCreatorElt.classList.add(\"project-modal\");\n            projectCreatorElt.classList.add(\"modal-popup\");\n\n            const projectCreatorTitle = document.createElement(\"h2\");\n            projectCreatorTitle.classList.add(\"title\");\n            projectCreatorTitle.textContent = \"Create Project\";\n\n            const fieldsContainer = document.createElement(\"div\");\n            \n            const titleFieldContainer = document.createElement(\"div\");\n\n            const titleLabel = document.createElement(\"label\");\n            titleLabel.setAttribute(\"for\", \"title-input\");\n            titleLabel.textContent = \"Title\";\n\n            const titleInput = document.createElement(\"input\");\n            titleInput.setAttribute(\"id\", \"title-input\");\n            titleInput.setAttribute(\"type\", \"text\");\n\n            titleFieldContainer.appendChild(titleLabel);\n            titleFieldContainer.appendChild(titleInput);\n\n            const descFieldContainer = document.createElement(\"div\");\n\n            const descLabel = document.createElement(\"label\");\n            descLabel.setAttribute(\"for\", \"desc-input\");\n            descLabel.textContent = \"Description\";\n\n            const descInput = document.createElement(\"textarea\");\n            descInput.setAttribute(\"id\", \"desc-input\");\n            descInput.setAttribute(\"name\", \"desc-input\");\n            descInput.setAttribute(\"cols\", \"30\");\n            descInput.setAttribute(\"rows\", \"10\");\n            descInput.setAttribute(\"placeholder\", \"Enter your description here...\");\n\n            descFieldContainer.appendChild(descLabel);\n            descFieldContainer.appendChild(descInput);\n\n            fieldsContainer.appendChild(titleFieldContainer);\n            fieldsContainer.appendChild(descFieldContainer);\n\n            const confirmButton = document.createElement(\"button\");\n            confirmButton.textContent = \"Confirm\";\n\n            projectCreatorElt.appendChild(projectCreatorTitle);\n            projectCreatorElt.appendChild(fieldsContainer);\n            projectCreatorElt.appendChild(confirmButton);\n\n            appElements.modal.innerHTML = \"\";\n            appElements.modal.appendChild(projectCreatorElt);\n            appElements.modal.classList.add(\"modal-active\");\n        }\n\n        function close() {\n\n            // Fermer la modale\n            appElements.modal.classList.remove(\"modal-active\"); \n            appElements.modal.innerHTML = \"\";\n        }\n\n        return {\n            showDetails,\n            showTaskCreator,\n            showProjectCreator,\n            showErrorMessage,\n            close\n        }\n    })();\n\n\n    const icons = (function(){\n        function showDeleteIcon(parent) {\n            const deleteIcon = document.createElement(\"img\");\n            deleteIcon.src = \"./delete.png\";\n            deleteIcon.alt = \"delete icon\";\n            deleteIcon.classList.add(\"trash-icon\");\n\n            parent.appendChild(deleteIcon);\n        }\n\n        function removeDeleteIcon(parent) {\n            document.querySelector(\".trash-icon\").remove(); \n        }\n\n        return {\n            showDeleteIcon,\n            removeDeleteIcon\n        }\n    })();\n\n    return {\n        appElements,\n        active,\n        projects,\n        tasks,\n        modal,\n        icons\n\n    }\n})();\n\n\n\n//# sourceURL=webpack://odin-todo-list/./src/projectUI.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/projectController.js");
/******/ 	
/******/ })()
;